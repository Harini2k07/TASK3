class ContactBook:
    def __init__(self):
        self.contacts = {}

    def add_contact(self, name, phone, email, address):
        if name in self.contacts:
            print("Contact already exists!")
        else:
            self.contacts[name] = {"Phone": phone, "Email": email, "Address": address}
            print(f"Contact for {name} added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
        else:
            print("\nContact List:")
            for name, details in self.contacts.items():
                print(f"Name: {name}, Phone: {details['Phone']}")
            print()

    def search_contact(self, search_key):
        found = False
        for name, details in self.contacts.items():
            if search_key.lower() in name.lower() or search_key in details["Phone"]:
                print(f"\nContact Found:\nName: {name}\nPhone: {details['Phone']}\nEmail: {details['Email']}\nAddress: {details['Address']}\n")
                found = True
                break
        if not found:
            print("No contact found with that name or phone number.")

    def update_contact(self, name, phone=None, email=None, address=None):
        if name in self.contacts:
            if phone:
                self.contacts[name]["Phone"] = phone
            if email:
                self.contacts[name]["Email"] = email
            if address:
                self.contacts[name]["Address"] = address
            print(f"Contact for {name} updated successfully!")
        else:
            print("Contact not found!")

    def delete_contact(self, name):
        if name in self.contacts:
            del self.contacts[name]
            print(f"Contact for {name} deleted successfully!")
        else:
            print("Contact not found!")


# User Interface
def main():
    contact_book = ContactBook()

    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            name = input("Enter Name: ")
            phone = input("Enter Phone Number: ")
            email = input("Enter Email: ")
            address = input("Enter Address: ")
            contact_book.add_contact(name, phone, email, address)

        elif choice == "2":
            contact_book.view_contacts()

        elif choice == "3":
            search_key = input("Enter Name or Phone Number to search: ")
            contact_book.search_contact(search_key)

        elif choice == "4":
            name = input("Enter Name of the contact to update: ")
            phone = input("Enter new Phone Number (leave blank to keep unchanged): ")
            email = input("Enter new Email (leave blank to keep unchanged): ")
            address = input("Enter new Address (leave blank to keep unchanged): ")
            contact_book.update_contact(name, phone if phone else None, email if email else None, address if address else None)

        elif choice == "5":
            name = input("Enter Name of the contact to delete: ")
            contact_book.delete_contact(name)

        elif choice == "6":
            print("Exiting Contact Book. Goodbye!")
            break

        else:
            print("Invalid choice! Please try again.")


if __name__ == "__main__":
    main()
class ContactBook:
    def __init__(self):
        self.contacts = {}

    def add_contact(self, name, phone, email, address):
        if name in self.contacts:
            print("Contact already exists!")
        else:
            self.contacts[name] = {"Phone": phone, "Email": email, "Address": address}
            print(f"Contact for {name} added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
        else:
            print("\nContact List:")
            for name, details in self.contacts.items():
                print(f"Name: {name}, Phone: {details['Phone']}")
            print()

    def search_contact(self, search_key):
        found = False
        for name, details in self.contacts.items():
            if search_key.lower() in name.lower() or search_key in details["Phone"]:
                print(f"\nContact Found:\nName: {name}\nPhone: {details['Phone']}\nEmail: {details['Email']}\nAddress: {details['Address']}\n")
                found = True
                break
        if not found:
            print("No contact found with that name or phone number.")

    def update_contact(self, name, phone=None, email=None, address=None):
        if name in self.contacts:
            if phone:
                self.contacts[name]["Phone"] = phone
            if email:
                self.contacts[name]["Email"] = email
            if address:
                self.contacts[name]["Address"] = address
            print(f"Contact for {name} updated successfully!")
        else:
            print("Contact not found!")

    def delete_contact(self, name):
        if name in self.contacts:
            del self.contacts[name]
            print(f"Contact for {name} deleted successfully!")
        else:
            print("Contact not found!")


# User Interface
def main():
    contact_book = ContactBook()

    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            name = input("Enter Name: ")
            phone = input("Enter Phone Number: ")
            email = input("Enter Email: ")
            address = input("Enter Address: ")
            contact_book.add_contact(name, phone, email, address)

        elif choice == "2":
            contact_book.view_contacts()

        elif choice == "3":
            search_key = input("Enter Name or Phone Number to search: ")
            contact_book.search_contact(search_key)

        elif choice == "4":
            name = input("Enter Name of the contact to update: ")
            phone = input("Enter new Phone Number (leave blank to keep unchanged): ")
            email = input("Enter new Email (leave blank to keep unchanged): ")
            address = input("Enter new Address (leave blank to keep unchanged): ")
            contact_book.update_contact(name, phone if phone else None, email if email else None, address if address else None)

        elif choice == "5":
            name = input("Enter Name of the contact to delete: ")
            contact_book.delete_contact(name)

        elif choice == "6":
            print("Exiting Contact Book. Goodbye!")
            break

        else:
            print("Invalid choice! Please try again.")


if __name__ == "__main__":
    main()
class ContactBook:
    def __init__(self):
        self.contacts = {}

    def add_contact(self, name, phone, email, address):
        if name in self.contacts:
            print("Contact already exists!")
        else:
            self.contacts[name] = {"Phone": phone, "Email": email, "Address": address}
            print(f"Contact for {name} added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
        else:
            print("\nContact List:")
            for name, details in self.contacts.items():
                print(f"Name: {name}, Phone: {details['Phone']}")
            print()

    def search_contact(self, search_key):
        found = False
        for name, details in self.contacts.items():
            if search_key.lower() in name.lower() or search_key in details["Phone"]:
                print(f"\nContact Found:\nName: {name}\nPhone: {details['Phone']}\nEmail: {details['Email']}\nAddress: {details['Address']}\n")
                found = True
                break
        if not found:
            print("No contact found with that name or phone number.")

    def update_contact(self, name, phone=None, email=None, address=None):
        if name in self.contacts:
            if phone:
                self.contacts[name]["Phone"] = phone
            if email:
                self.contacts[name]["Email"] = email
            if address:
                self.contacts[name]["Address"] = address
            print(f"Contact for {name} updated successfully!")
        else:
            print("Contact not found!")

    def delete_contact(self, name):
        if name in self.contacts:
            del self.contacts[name]
            print(f"Contact for {name} deleted successfully!")
        else:
            print("Contact not found!")


# User Interface
def main():
    contact_book = ContactBook()

    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            name = input("Enter Name: ")
            phone = input("Enter Phone Number: ")
            email = input("Enter Email: ")
            address = input("Enter Address: ")
            contact_book.add_contact(name, phone, email, address)

        elif choice == "2":
            contact_book.view_contacts()

        elif choice == "3":
            search_key = input("Enter Name or Phone Number to search: ")
            contact_book.search_contact(search_key)

        elif choice == "4":
            name = input("Enter Name of the contact to update: ")
            phone = input("Enter new Phone Number (leave blank to keep unchanged): ")
            email = input("Enter new Email (leave blank to keep unchanged): ")
            address = input("Enter new Address (leave blank to keep unchanged): ")
            contact_book.update_contact(name, phone if phone else None, email if email else None, address if address else None)

        elif choice == "5":
            name = input("Enter Name of the contact to delete: ")
            contact_book.delete_contact(name)

        elif choice == "6":
            print("Exiting Contact Book. Goodbye!")
            break

        else:
            print("Invalid choice! Please try again.")


if __name__ == "__main__":
    main()

